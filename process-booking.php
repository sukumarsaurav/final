<?php
// Start session if not already started
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

// Include database connection
require_once 'includes/config.php';
require_once 'includes/db.php';

// Redirect if not logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit;
}

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    header("Location: book-service.php");
    exit;
}

// Validate required fields
$required_fields = [
    'consultant_id', 
    'user_id', 
    'organization_id', 
    'visa_service_id', 
    'consultation_mode_id', 
    'booking_date', 
    'booking_time'
];

foreach ($required_fields as $field) {
    if (!isset($_POST[$field]) || empty($_POST[$field])) {
        $_SESSION['booking_error'] = "Missing required field: {$field}";
        header("Location: book-consultation.php?consultant_id=" . $_POST['consultant_id']);
        exit;
    }
}

// Validate terms agreement
if (!isset($_POST['terms']) || $_POST['terms'] !== 'on') {
    $_SESSION['booking_error'] = "You must agree to the terms and conditions";
    header("Location: book-consultation.php?consultant_id=" . $_POST['consultant_id']);
    exit;
}

// Get form data
$consultant_id = intval($_POST['consultant_id']);
$user_id = intval($_POST['user_id']);
$organization_id = intval($_POST['organization_id']);
$visa_service_id = intval($_POST['visa_service_id']);
$consultation_mode_id = intval($_POST['consultation_mode_id']);

// Combine date and time
$booking_date = $_POST['booking_date'];
$booking_time = $_POST['booking_time'];
$booking_datetime = $booking_date . ' ' . $booking_time;

// Optional fields
$client_notes = isset($_POST['client_notes']) ? trim($_POST['client_notes']) : '';
$language_preference = isset($_POST['language_preference']) ? trim($_POST['language_preference']) : 'English';

// Check if service consultation mode exists
$scm_query = "SELECT service_consultation_id FROM service_consultation_modes 
              WHERE visa_service_id = ? AND consultation_mode_id = ? AND is_available = 1";
$scm_stmt = $conn->prepare($scm_query);
$scm_stmt->bind_param('ii', $visa_service_id, $consultation_mode_id);
$scm_stmt->execute();
$scm_result = $scm_stmt->get_result();

if ($scm_result->num_rows === 0) {
    $_SESSION['booking_error'] = "Selected consultation mode is not available for this service";
    header("Location: book-consultation.php?consultant_id=" . $consultant_id);
    exit;
}

$scm_row = $scm_result->fetch_assoc();
$service_consultation_id = $scm_row['service_consultation_id'];
$scm_stmt->close();

// Get visa service details to calculate duration
$service_query = "SELECT base_price FROM visa_services WHERE visa_service_id = ?";
$service_stmt = $conn->prepare($service_query);
$service_stmt->bind_param('i', $visa_service_id);
$service_stmt->execute();
$service_result = $service_stmt->get_result();

if ($service_result->num_rows === 0) {
    $_SESSION['booking_error'] = "Selected service is not available";
    header("Location: book-consultation.php?consultant_id=" . $consultant_id);
    exit;
}

$service_row = $service_result->fetch_assoc();
$base_price = $service_row['base_price'];
$service_stmt->close();

// Get consultation mode fee
$mode_query = "SELECT additional_fee FROM service_consultation_modes WHERE service_consultation_id = ?";
$mode_stmt = $conn->prepare($mode_query);
$mode_stmt->bind_param('i', $service_consultation_id);
$mode_stmt->execute();
$mode_result = $mode_stmt->get_result();
$mode_row = $mode_result->fetch_assoc();
$additional_fee = $mode_row['additional_fee'];
$mode_stmt->close();

// Default duration and other parameters
$duration_minutes = 60; // Default to 1 hour
$status_id = 1; // Pending status (you may need to adjust based on your database)

// Generate booking reference (We'll use the database function from booking.sql)
$reference_number = null; // This will be generated by the trigger

// Begin transaction
$conn->begin_transaction();

try {
    // Insert booking
    $insert_query = "INSERT INTO bookings (
        reference_number, user_id, visa_service_id, service_consultation_id, 
        consultant_id, organization_id, status_id, booking_datetime, 
        duration_minutes, client_notes, language_preference, time_zone
    ) VALUES (
        ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?
    )";
    
    $time_zone = 'UTC'; // Default, could be customized
    
    $insert_stmt = $conn->prepare($insert_query);
    $insert_stmt->bind_param('siiiiisissss', 
        $reference_number, $user_id, $visa_service_id, $service_consultation_id,
        $consultant_id, $organization_id, $status_id, $booking_datetime,
        $duration_minutes, $client_notes, $language_preference, $time_zone
    );
    
    if (!$insert_stmt->execute()) {
        throw new Exception("Failed to create booking: " . $conn->error);
    }
    
    $booking_id = $conn->insert_id;
    $insert_stmt->close();
    
    // Create payment record
    $total_price = $base_price + $additional_fee;
    $payment_method = 'credit_card'; // Default
    $payment_status = 'pending'; // Default
    
    $payment_query = "INSERT INTO booking_payments (
        booking_id, amount, currency, payment_method, payment_status
    ) VALUES (?, ?, ?, ?, ?)";
    
    $currency = 'USD'; // Default
    
    $payment_stmt = $conn->prepare($payment_query);
    $payment_stmt->bind_param('idsss', 
        $booking_id, $total_price, $currency, $payment_method, $payment_status
    );
    
    if (!$payment_stmt->execute()) {
        throw new Exception("Failed to create payment record: " . $conn->error);
    }
    
    $payment_stmt->close();
    
    // Create activity log
    $activity_query = "INSERT INTO booking_activity_logs (
        booking_id, user_id, activity_type, description
    ) VALUES (?, ?, ?, ?)";
    
    $activity_type = 'created';
    $description = 'Booking created through online booking system';
    
    $activity_stmt = $conn->prepare($activity_query);
    $activity_stmt->bind_param('iiss', 
        $booking_id, $user_id, $activity_type, $description
    );
    
    if (!$activity_stmt->execute()) {
        throw new Exception("Failed to create activity log: " . $conn->error);
    }
    
    $activity_stmt->close();
    
    // Create reminder
    $reminder_query = "INSERT INTO booking_reminders (
        booking_id, reminder_type, scheduled_time
    ) VALUES (?, ?, DATE_SUB(?, INTERVAL 24 HOUR))";
    
    $reminder_type = 'email';
    
    $reminder_stmt = $conn->prepare($reminder_query);
    $reminder_stmt->bind_param('iss', 
        $booking_id, $reminder_type, $booking_datetime
    );
    
    if (!$reminder_stmt->execute()) {
        throw new Exception("Failed to create reminder: " . $conn->error);
    }
    
    $reminder_stmt->close();
    
    // Commit transaction
    $conn->commit();
    
    // Set success message
    $_SESSION['booking_success'] = "Your booking has been successfully created. Booking reference: " . $reference_number;
    
    // Redirect to booking confirmation page
    header("Location: booking-confirmation.php?id=" . $booking_id);
    exit;
    
} catch (Exception $e) {
    // Rollback transaction on error
    $conn->rollback();
    
    // Set error message
    $_SESSION['booking_error'] = $e->getMessage();
    
    // Redirect back to booking form
    header("Location: book-consultation.php?consultant_id=" . $consultant_id);
    exit;
}
?> 